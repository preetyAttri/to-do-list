[{"/Users/com146/to-do-list/src/App.js":"1","/Users/com146/to-do-list/src/reportWebVitals.js":"2","/Users/com146/to-do-list/src/index.js":"3","/Users/com146/to-do-list/src/config.js":"4","/Users/com146/to-do-list/src/redux-saga/reducer.js":"5","/Users/com146/to-do-list/src/redux-saga/saga.js":"6","/Users/com146/to-do-list/src/redux-saga/constant.js":"7","/Users/com146/to-do-list/src/redux-saga/action.js":"8","/Users/com146/to-do-list/src/utils/request.js":"9","/Users/com146/to-do-list/src/redux-saga/store.js":"10","/Users/com146/to-do-list/src/components/Header/index.js":"11","/Users/com146/to-do-list/src/components/List/index.js":"12","/Users/com146/to-do-list/src/components/List/listItem.js":"13","/Users/com146/to-do-list/src/components/index.js":"14","/Users/com146/to-do-list/src/components/NotFound/index.js":"15","/Users/com146/to-do-list/src/components/Home/index.js":"16"},{"size":579,"mtime":1610284036335,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1610194988594,"results":"19","hashOfConfig":"18"},{"size":539,"mtime":1610260547578,"results":"20","hashOfConfig":"18"},{"size":105,"mtime":1610279541582,"results":"21","hashOfConfig":"18"},{"size":3856,"mtime":1610291573273,"results":"22","hashOfConfig":"18"},{"size":4253,"mtime":1610288027377,"results":"23","hashOfConfig":"18"},{"size":853,"mtime":1610252651658,"results":"24","hashOfConfig":"18"},{"size":3246,"mtime":1610261112656,"results":"25","hashOfConfig":"18"},{"size":1614,"mtime":1610287348076,"results":"26","hashOfConfig":"18"},{"size":337,"mtime":1610261912595,"results":"27","hashOfConfig":"18"},{"size":451,"mtime":1610283418425,"results":"28","hashOfConfig":"18"},{"size":2191,"mtime":1610292796900,"results":"29","hashOfConfig":"18"},{"size":2597,"mtime":1610285323746,"results":"30","hashOfConfig":"18"},{"size":134,"mtime":1610283967076,"results":"31","hashOfConfig":"18"},{"size":152,"mtime":1610284058224,"results":"32","hashOfConfig":"18"},{"size":266,"mtime":1610283992695,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ant1sq",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/com146/to-do-list/src/App.js",[],["68","69"],"/Users/com146/to-do-list/src/reportWebVitals.js",[],"/Users/com146/to-do-list/src/index.js",[],"/Users/com146/to-do-list/src/config.js",[],"/Users/com146/to-do-list/src/redux-saga/reducer.js",["70"],"import { \n    GET_TASK_LIST,\n    GET_TASK_LIST_SUCCESS,\n    GET_TASK_LIST_ERROR,\n    CREATE_TASK,\n    CREATE_TASK_SUCCESS,\n    CREATE_TASK_ERROR,\n    UPDATE_TASK,\n    UPDATE_TASK_SUCCESS,\n    UPDATE_TASK_ERROR,\n    DELETE_TASK,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_ERROR,\n    CHANGE_TASK_STATUS,\n    CHANGE_TASK_STATUS_SUCCESS,\n    CHANGE_TASK_STATUS_ERROR,\n    SET_LOADER\n} from './constant.js';\n\n/*\n    state intialization\n*/\nconst initialState = {\n    taskList: [],\n    success: false,\n    error: false,\n    loading: false\n}\n\nconst findindex = (array, id) => {\n    return array.findIndex((ele) => ele.id === id);\n}\nconst sortList = (array) => {\n    return array.sort((a, b) => {\n        if(a.completed_at && b.completed_at) {\n            return new Date(a.updated_at) - new Date(b.updated_at)\n        } else if(a.completed_at) {\n            return 1\n        } else if(b.completed_at) {\n            return -1\n        } else {\n            return new Date(b.created_at) - new Date(a.created_at)\n        }\n    })\n}\n\nconst manupulateArray = ({array, item, status}) => {\n    const taskArray =  [...array];\n    switch(status) {\n        case \"ADD\": \n             taskArray.splice(0, 0, item);\n            return taskArray;\n        case \"UPDATE\": {\n            const index = findindex(array, item?.id)\n            taskArray.splice(index, 1, item)\n            return sortList(taskArray);\n        }\n        case \"DELETE\": {\n            const index = findindex(array, item)\n            taskArray.splice(index, 1)\n            return sortList(taskArray);\n        }\n        default: return sortList(taskArray);\n    }\n}\n/*\n    reducer function which works according to action dispatched\n*/\nfunction reducer(state = initialState, action) {\n    switch (action.type) {\n        case SET_LOADER:\n            return { ...state, loading: action.data };\n        case GET_TASK_LIST:\n            return state;\n        case GET_TASK_LIST_SUCCESS:\n            return { ...state, taskList: sortList(action.data) };\n        case GET_TASK_LIST_ERROR:\n            return { ...state, error: action.error };\n        case CREATE_TASK:\n            return state;\n        case CREATE_TASK_SUCCESS: {\n            return { \n                ...state, \n                taskList: manupulateArray({array: state.taskList, item: action.data, status: \"ADD\"}),\n                success: true \n            };\n        }\n        case CREATE_TASK_ERROR:\n            return { ...state, error: action.error };\n        case UPDATE_TASK:\n            return state;\n        case UPDATE_TASK_SUCCESS: \n            return { \n                ...state, \n                success: true,\n                taskList: manupulateArray({array: state.taskList, item: action.data, status: \"UPDATE\"}),\n            };\n        case UPDATE_TASK_ERROR:\n            return { ...state, error: action.error };\n        case DELETE_TASK:\n            return state;\n        case DELETE_TASK_SUCCESS: {\n            const index = findindex(state.taskList, action.data)\n            const taskArray =  [...state.taskList];\n            taskArray.splice(index, 1)\n            return { \n                ...state, \n                success: true,\n                taskList: manupulateArray({array: state.taskList, item: action.data, status: \"DELETE\"}),\n            };\n        }\n        case DELETE_TASK_ERROR: \n            return { ...state, error: action.error }\n        case CHANGE_TASK_STATUS:\n            return state;\n        case CHANGE_TASK_STATUS_SUCCESS: {\n            return { \n                ...state, \n                success: true,\n                taskList: manupulateArray({array: state.taskList, item: action.data, status: \"UPDATE\"}),\n            };\n        };\n        case CHANGE_TASK_STATUS_ERROR:\n            return { ...state, error: action.error };\n        default:\n            return state;\n    }\n}\nexport default reducer;\n","/Users/com146/to-do-list/src/redux-saga/saga.js",[],"/Users/com146/to-do-list/src/redux-saga/constant.js",[],"/Users/com146/to-do-list/src/redux-saga/action.js",[],"/Users/com146/to-do-list/src/utils/request.js",[],"/Users/com146/to-do-list/src/redux-saga/store.js",[],"/Users/com146/to-do-list/src/components/Header/index.js",[],"/Users/com146/to-do-list/src/components/List/index.js",[],"/Users/com146/to-do-list/src/components/List/listItem.js",[],"/Users/com146/to-do-list/src/components/index.js",[],"/Users/com146/to-do-list/src/components/NotFound/index.js",[],"/Users/com146/to-do-list/src/components/Home/index.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":116,"column":42,"nodeType":"77","messageId":"78","endLine":122,"endColumn":10},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]